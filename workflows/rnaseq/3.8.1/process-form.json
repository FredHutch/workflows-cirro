{
  "ui": {},
  "form": {
    "title": "RNA-Seq Analysis Pipeline",
    "type": "object",
    "required": [],
    "properties": {
      "inputs": {
        "type": "object",
        "title": "Inputs",
        "description": "Optionally select a subset of samples to align",
        "properties": {
          "subset": {
            "type": "string",
            "title": "(optional) Select Samples",
            "file": "**/*.f*",
            "multiple": true,
            "pathType": "dataset",
            "description": "If any files are selected, then only those samples will be analyzed. Leave blank to analyze all samples."
          }    
        }
      },
      "igenomes": {
        "type": "object",
        "title": "Reference Genome (iGenomes)",
        "description": "Select a curated reference genome from the iGenomes collection",
        "properties": {
          "genome": {
            "type": "string",
            "title": "Select A Reference Genome",
            "description": "The following iGenomes are currently available for analysis",
            "enum": [
              "TAIR10",
              "EB2",
              "UMD3.1",
              "bosTau8",
              "WBcel235",
              "ce10",
              "CanFam3.1",
              "canFam3",
              "GRCz10",
              "danRer10",
              "BDGP6",
              "dm6",
              "EquCab2",
              "equCab2",
              "EB1",
              "Galgal4",
              "Gm01",
              "GRCh37",
              "GRCh38",
              "hg18",
              "hg19",
              "hg38",
              "Mmul 1",
              "GRCm38",
              "mm10",
              "IRGSP-1.0",
              "CHIMP2.1.4",
              "panTro4",
              "Rnor 5.0",
              "Rnor 6.0",
              "rn6",
              "R64-1-1",
              "sacCer3",
              "EF2",
              "Sbi1",
              "Sscrofa10.2",
              "susScr3",
              "AGPv3"
            ],
            "enumNames": [
              "Arabidopsis thaliana (TAIR10)",
              "Bacillus subtilis 168 (EB2)",
              "Bos taurus (UMD3.1)",
              "Bos taurus (bosTau8)",
              "Caenorhabditis elegans (WBcel235)",
              "Caenorhabditis elegans (ce10)",
              "Canis familiaris (CanFam3.1)",
              "Canis familiaris (canFam3)",
              "Danio rerio (GRCz10)",
              "Danio rerio (danRer10)",
              "Drosophila melanogaster (BDGP6)",
              "Drosophila melanogaster (dm6)",
              "Equus caballus (EquCab2)",
              "Equus caballus (equCab2)",
              "Escherichia coli K 12 DH10B (EB1)",
              "Gallus gallus (Galgal4)",
              "Glycine max (Gm01)",
              "Homo sapiens (GRCh37)",
              "Homo sapiens (GRCh38)",
              "Homo sapiens (hg18)",
              "Homo sapiens (hg19)",
              "Homo sapiens (hg38)",
              "Macaca mulatta (Mmul 1)",
              "Mus musculus (GRCm38)",
              "Mus musculus (mm10)",
              "Oryza sativa japonica (IRGSP-1.0)",
              "Pan troglodytes (CHIMP2.1.4)",
              "Pan troglodytes (panTro4)",
              "Rattus norvegicus (Rnor 5.0)",
              "Rattus norvegicus (Rnor 6.0)",
              "Rattus norvegicus (rn6)",
              "Saccharomyces cerevisiae (R64-1-1)",
              "Saccharomyces cerevisiae (sacCer3)",
              "Schizosaccharomyces pombe (EF2)",
              "Sorghum bicolor (Sbi1)",
              "Sus scrofa (Sscrofa10.2)",
              "Sus scrofa (susScr3)",
              "Zea mays (AGPv3)"
            ],
            "default": "GRCh38"
          }
        }
      },
      "read_trimming_options": {
        "title": "Read Trimming Options",
        "type": "object",
        "properties": {
          "skip_trimming": {
            "type": "boolean",
            "title": "Skip adapter trimming?",
            "default": false,
            "help_text": "Use this if your input FastQ files have already been trimmed outside of the workflow or if you're very confident that there is no adapter contamination in your data."
          }
        },
        "dependencies": {
          "skip_trimming": {
            "oneOf": [
              {
                "properties": {
                  "skip_trimming": {
                    "enum": [true]
                  }
                }
              },
              {
                "properties": {
                  "skip_trimming": {
                    "enum": [false]
                  },
                  "clip_r1": {
                    "type": "integer",
                    "title": "Clip R1",
                    "description": "Instructs Trim Galore to remove bp from the 5' end of read 1 (or single-end reads)."
                  },
                  "clip_r2": {
                    "type": "integer",
                    "title": "Clip R2",
                    "description": "Instructs Trim Galore to remove bp from the 5' end of read 2 (paired-end reads only)."
                  },
                  "three_prime_clip_r1": {
                    "type": "integer",
                    "title": "Three Prime Clip R1",
                    "description": "Instructs Trim Galore to remove bp from the 3' end of read 1 AFTER adapter/quality trimming has been performed."
                  },
                  "three_prime_clip_r2": {
                    "type": "integer",
                    "title": "Three Prime Clip R2",
                    "description": "Instructs Trim Galore to remove bp from the 3' end of read 2 AFTER adapter/quality trimming has been performed."
                  },
                  "trim_nextseq": {
                    "type": "integer",
                    "title": "Trim NextSeq",
                    "description": "Instructs Trim Galore to apply the --nextseq=X option, to trim based on quality after removing poly-G tails.",
                    "help_text": "This enables the option Cutadapt `--nextseq-trim=3'CUTOFF` option via Trim Galore, which will set a quality cutoff (that is normally given with -q instead), but qualities of G bases are ignored. This trimming is in common for the NextSeq- and NovaSeq-platforms, where basecalls without any signal are called as high-quality G bases."
                  },
                  "save_trimmed": {
                    "type": "boolean",
                    "title": "Save the trimmed FastQ files in the results directory?"
                  }
                }
              }
            ]
          }
        }
      },
      "alignment_options": {
        "title": "Alignment Options",
        "type": "object",
        "properties": {
          "aligner": {
            "type": "string",
            "title": "Aligner",
            "default": "star_salmon",
            "description": "Specifies the alignment algorithm to use - available options are 'star_salmon', 'star_rsem' and 'hisat2'.",
            "enum": [
              "star_salmon",
              "star_rsem",
              "hisat2"
            ]
          },
          "pseudo_aligner": {
            "type": "string",
            "title": "Pseudo Aligner",
            "description": "Specifies the pseudo aligner to use - available options are 'salmon'. Runs in addition to '--aligner'.",
            "enum": [
              "salmon"
            ],
            "default": "salmon"
          },
          "salmon_quant_libtype": {
            "type": "string",
            "title": "Salmon Quant Lib Type",
            "description": " Override Salmon library type inferred based on strandedness defined in meta object.",
            "help_text": "See [Salmon docs](https://salmon.readthedocs.io/en/latest/library_type.html)."
          },
          "seq_center": {
            "type": "string",
            "title": "Seq Center",
            "description": "Sequencing center information to be added to read group of BAM files.",
            "default": "Fred Hutch Shared Resources"
          },
          "save_unaligned": {
            "type": "boolean",
            "title": "Save Unaligned (FastQ or BAM files depending upon tool)",
            "description": "Where possible, save unaligned reads from either STAR, HISAT2 or Salmon to the results directory.",
            "default": false
          }
        }
      },
      "process_skipping_options": {
        "title": "Process skipping options",
        "type": "object",
        "description": "Options to skip various steps within the workflow.",
        "properties": {
          "skip_qualimap": {
            "type": "boolean",
            "title": "Skip Qualimap",
            "default": true
          },
          "skip_dupradar": {
            "type": "boolean",
            "title": "Skip dupRadar",
            "default": true
          },
          "skip_bigwig": {
            "type": "boolean",
            "title": "Skip bigWig file creation",
            "default": false
          },
          "skip_stringtie": {
            "type": "boolean",
            "title": "Skip StringTie",
            "default": false
          },
          "skip_fastqc": {
            "type": "boolean",
            "title": "Skip FastQC",
            "default": false
          },
          "skip_preseq": {
            "type": "boolean",
            "title": "Skip Preseq",
            "default": false
          },
          "skip_rseqc": {
            "type": "boolean",
            "title": "Skip RSeQC",
            "default": false
          },
          "skip_biotype_qc": {
            "type": "boolean",
            "title": "Skip additional featureCounts process for biotype QC",
            "default": false
          },
          "skip_deseq2_qc": {
            "type": "boolean",
            "title": "Skip DESeq2 PCA and heatmap plotting",
            "default": false
          },
          "skip_multiqc": {
            "type": "boolean",
            "title": "Skip MultiQC",
            "default": false
          },
          "skip_qc": {
            "type": "boolean",
            "title": "Skip all QC steps except for MultiQC",
            "default": false
          }
        }
      },
      "umi_options": {
        "type": "object",
        "title": "UMI Options",
        "properties": {
          "with_umi": {
            "type": "boolean",
            "title": "Enable UMI-based read deduplication?",
            "default": false
          }
        },
        "dependencies": {
          "with_umi": {
            "oneOf": [
              {
                "properties": {
                  "with_umi": {
                    "enum": [false]
                  }
                }
              },
              {
                "properties": {
                  "with_umi": {
                    "enum": [true]
                  },
                  "umitools_extract_method": {
                    "type": "string",
                    "title": "Umitools Extract Method",
                    "default": "string",
                    "description": "UMI pattern to use. Can be either 'string' (default) or 'regex'.",
                    "help_text": "More details can be found in the [UMI-tools documentation](https://umi-tools.readthedocs.io/en/latest/reference/extract.html#extract-method).\n"
                  },
                  "umitools_bc_pattern": {
                    "type": "string",
                    "title": "Umitools Extract Method",
                    "help_text": "More details can be found in the [UMI-tools documentation](https://umi-tools.readthedocs.io/en/latest/reference/extract.html#extract-method).",
                    "description": "The UMI barcode pattern to use e.g. 'NNNNNN' indicates that the first 6 nucleotides of the read are from the UMI."
                  },
                  "save_umi_intermeds": {
                    "type": "boolean",
                    "title": "Save intermediate FastQ and BAM files produced by UMI-tools?"
                  }
                }
              }
            ]
          }
        }
      },
      "read_filtering_options": {
        "title": "Read Filtering Options",
        "type": "object",
        "properties": {
          "skip_bbsplit": {
            "type": "boolean",
            "default": true,
            "title": "Skip BBSplit for removal of non-reference genome reads."
          },
          "remove_ribo_rna": {
            "type": "boolean",
            "title": "Enable the removal of reads derived from ribosomal RNA using SortMeRNA?",
            "default": false,
            "help_text": "Any patterns found in the sequences defined by the '--ribo_database_manifest' parameter will be used."
          }
        },
        "dependencies": {
          "remove_ribo_rna": {
            "oneOf": [
              {
                "properties": {
                  "remove_ribo_rna": {
                    "enum": [false]
                  }
                }
              },
              {
                "properties": {
                  "remove_ribo_rna": {
                    "enum": [true]
                  },
                  "save_non_ribo_reads": {
                    "type": "boolean",
                    "title": "Save intermediate FastQ files containing non-rRNA reads?"
                  }
                }
              }
            ]
          }
        }
      }
    }
  }
}
